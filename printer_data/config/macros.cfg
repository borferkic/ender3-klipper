
#macros para funciones practicas

#======================================================
# FILAMENT CHANGE
#======================================================

[gcode_macro Cambiar_Filamento]

gcode:
    {% set X = params.X|default(50)|float %}
    {% set Y = params.Y|default(0)|float %}
    {% set Z = params.Z|default(10)|float %}
    SAVE_GCODE_STATE NAME=M600_state
    PAUSE
    G91
    G1 E-.8 F2700
    G1 Z{Z}
    G90
    G1 X{X} Y{Y} F3000
    G91
    G1 E-50 F1000
    SET_IDLE_TIMEOUT TIMEOUT=7200
    RESTORE_GCODE_STATE NAME=M600_state


#======================================================
# PID Calibracion HOTEND and BED
#======================================================
[gcode_macro Ajustar_Extrusor]
gcode:
	{% set TEMP = params.TEMP|default(200)|float %}
	PID_CALIBRATE HEATER=extruder TARGET={TEMP}


[gcode_macro Ajustar_Cama]
gcode:
    {% set TEMP = params.TEMP|default(60)|float %}
    PID_CALIBRATE HEATER=heater_bed TARGET={TEMP}

#======================================================
# Macros para temperaturas custom
#======================================================
[gcode_macro FILAMENT_CHANGE]
gcode:
    M104 S180  ; Configura la temperatura del hotend a 180°C sin esperar
    M109 S180  ; Espera a que el hotend alcance los 180°C

[gcode_macro FILAMENT_CLEAN]
gcode:
    M104 S250  ; Configura la temperatura del hotend a 250°C sin esperar
    M109 S250  ; Espera a que el hotend alcance los 250°C

[gcode_macro HEAT_BED]
gcode:
    M140 S65  ; Configura la cama caliente a 65°C sin esperar
    M190 S65  ; Espera a que la cama alcance los 65°C



#======================================================
# Ajuste de Cama y Cargar la config 3D nivelacion
#======================================================

[gcode_macro Cargar_Bed_Mesh]
gcode:
    G28 # Home all axes
    BED_MESH_PROFILE LOAD=default


#======================================================
# Bed Mesh en Aread de impresion
#======================================================

[gcode_macro BED_MESH_CALIBRATE]
rename_existing: BED_MESH_CALIBRATE_BASE
; gcode parameters
variable_parameter_AREA_START : 0,0
variable_parameter_AREA_END : 0,0
; the clearance between print area and probe area 
variable_mesh_area_offset : 5.0
; number of sample per probe point
variable_probe_samples : 1
; minimum probe count
variable_min_probe_count : 4
; scale up the probe count, should be 1.0 ~ < variable_max_probe_count/variable_min_probe_count
variable_probe_count_scale_factor : 1.0
; enable preference index
variable_enable_reference_index : False
gcode:
    {% if params.AREA_START and params.AREA_END %}
        {% set bedMeshConfig = printer["configfile"].config["bed_mesh"] %}
        {% set safe_min_x = bedMeshConfig.mesh_min.split(",")[0]|float %}
        {% set safe_min_y = bedMeshConfig.mesh_min.split(",")[1]|float %}
        {% set safe_max_x = bedMeshConfig.mesh_max.split(",")[0]|float %}
        {% set safe_max_y = bedMeshConfig.mesh_max.split(",")[1]|float %}

        {% set area_min_x = params.AREA_START.split(",")[0]|float %}
	{% set area_min_y = params.AREA_START.split(",")[1]|float %}
	{% set area_max_x = params.AREA_END.split(",")[0]|float %}
	{% set area_max_y = params.AREA_END.split(",")[1]|float %}

	{% if bedMeshConfig.probe_count.split(",")|length == 2 %}
            {% set meshPointX = bedMeshConfig.probe_count.split(",")[0]|int %}
            {% set meshPointY = bedMeshConfig.probe_count.split(",")[1]|int %}
        {% else %}
            {% set meshPointX = bedMeshConfig.probe_count.split(",")[0]|int %}
            {% set meshPointY = bedMeshConfig.probe_count.split(",")[0]|int %}
        {% endif %}

	{% set meshMaxPointX = meshPointX %}
	{% set meshMaxPointY = meshPointY %}


        {% if (area_min_x < area_max_x) and (area_min_y < area_max_y) %}
            {% if area_min_x - mesh_area_offset >=  safe_min_x %}
                {% set area_min_x = area_min_x - mesh_area_offset %}
            {% else %}
                {% set area_min_x = safe_min_x %}
            {% endif %}

            {% if area_min_y - mesh_area_offset >=  safe_min_y %}
                {% set area_min_y = area_min_y - mesh_area_offset %}
            {% else %}
                {% set area_min_y = safe_min_y %}
            {% endif %}

            {% if area_max_x + mesh_area_offset <=  safe_max_x %}
                {% set area_max_x = area_max_x + mesh_area_offset %}
            {% else %}
                {% set area_max_x = safe_max_x %}
            {% endif %}

            {% if area_max_y + mesh_area_offset <=  safe_max_y %}
                {% set area_max_y = area_max_y + mesh_area_offset %}
            {% else %}
                {% set area_max_y = safe_max_y %}
            {% endif %}

            {% set meshPointX = (meshPointX * (area_max_x - area_min_x) / (safe_max_x - safe_min_x) * probe_count_scale_factor)|round(0)|int %}
            {% if meshPointX < min_probe_count %}
                {% set meshPointX = min_probe_count %}
            {% endif %}
	    {% if meshPointX > meshMaxPointX %}
                {% set meshPointX = meshMaxPointX %}
            {% endif %}

            {% set meshPointY = (meshPointY * (area_max_y -area_min_y ) / (safe_max_y - safe_min_y) * probe_count_scale_factor )|round(0)|int %}
            {% if meshPointY < min_probe_count %}
                {% set meshPointY = min_probe_count %}
            {% endif %}
	    {% if meshPointY > meshMaxPointY %}
                {% set meshPointY = meshMaxPointY %}
            {% endif %}

            {% set algorithm = "bicubic" %}
	    {% if "algorithm" in bedMeshConfig %}
	        {% set algorithm = bedMeshConfig.algorithm %}
            {% endif %}
            {% if meshPointX >=7 or meshPointY >=7 %}
                {% set algorithm = "bicubic" %}
            {% endif %}

            {% if enable_reference_index %}
                {% set referenceIndex = (meshPointX * meshPointY / 2 - 1 )|round(0)|int %}
                BED_MESH_CALIBRATE_BASE mesh_min={area_min_x},{area_min_y} mesh_max={area_max_x},{area_max_y} probe_count={meshPointX},{meshPointY} samples={probe_samples|int} algorithm={algorithm} relative_reference_index={referenceIndex}
            {% else %}
                BED_MESH_CALIBRATE_BASE mesh_min={area_min_x},{area_min_y} mesh_max={area_max_x},{area_max_y} probe_count={meshPointX},{meshPointY} samples={probe_samples|int} algorithm={algorithm}
            {% endif %}
        {% else %}
            BED_MESH_CALIBRATE_BASE
        {% endif %}
    {% else %}
        BED_MESH_CALIBRATE_BASE
    {% endif %}

#======================================================
# Testeo del BL-Touch
#======================================================
[gcode_macro BLTouch_Abajo]
gcode:
    BLTOUCH_DEBUG COMMAND=pin_down

[gcode_macro BLTouch_Arriba]
gcode:
    BLTOUCH_DEBUG COMMAND=pin_up

#======================================================
# Backup al GIT
#======================================================
[gcode_macro Backup_a_GITHUB]
gcode:
     RUN_SHELL_COMMAND CMD=update_git_script

#======================================================
# Ajuste de tornillos BED
#======================================================
[screws_tilt_adjust]
screw1: 83.5, 41     #Esto se debe ajustar por cada impresora, la calibre con una Ender 3
screw1_name: front left screw
screw2: 230, 41
screw2_name: front right screw
screw3: 83.5, 200
screw3_name: rear right screw
screw4: 230, 200
screw4_name: rear left screw
horizontal_move_z: 10.
speed: 250.   #speed of travel moves between screws
screw_thread: CW-M4  #measure your bed screw m3=3mm / m4=4mm / m5=5mm


######################################################################
# Filament Change
######################################################################
[gcode_macro M600]
gcode:
    {% set X = params.X|default(50)|float %}
    {% set Y = params.Y|default(0)|float %}
    {% set Z = params.Z|default(10)|float %}
    SAVE_GCODE_STATE NAME=M600_state
    PAUSE
    G91
    G1 E-5 F500       ; **Pequeña retracción a velocidad reducida**
    G1 Z{Z}           ; Sube el nozzle para evitar tocar la impresión
    G90
    G1 X{X} Y{Y} F3000  ; **Mueve la boquilla a la posición de cambio y se queda quieto**
    RESPOND MSG="Cambia el filamento y presiona continuar"
    PAUSE             ; **Detiene el proceso hasta que el usuario continúe**
    G1 E5 F500        ; Inserta otros 5 mm
    G90